USE WAREHOUSE IMT577_DW_COLE_THORPEN;
USE DATABASE IMT577_DB_COLE_THORPEN;



-- Create Fact_ProductSalesTarget (17,520 rows)
CREATE OR REPLACE TABLE FACT_PRODUCTSALESTARGET (
    DIMPRODUCTID INT CONSTRAINT FK_DIMPRODUCTID FOREIGN KEY REFERENCES DIM_PRODUCT(DIMPRODUCTID) --FK
    ,DIMTARGETDATEID NUMBER(9) CONSTRAINT FK_DIMTARGETDATEID FOREIGN KEY REFERENCES DIM_DATE(DATE_PKEY) --FK
    ,PRODUCTTARGETSALESQUANTITY FLOAT 
);

-- Insert data into table 
INSERT INTO FACT_PRODUCTSALESTARGET (
    DIMPRODUCTID
    ,DIMTARGETDATEID
    ,PRODUCTTARGETSALESQUANTITY
)
SELECT 
    P.PRODUCTID AS DIMPRODUCTID
    ,DT.DATE_PKEY AS DIMTARGETDATEID 
    ,(TDP.SALESQUANTITYTARGET / 365) AS PRODUCTTARGETSALESQUANTITY 
FROM STAGE_PRODUCT P 
    INNER JOIN STAGE_TARGET_DATA_PRODUCT TDP ON TDP.PRODUCTID = P.PRODUCTID
    INNER JOIN DIM_DATE DT ON DT.YEAR = TDP.YEAR
ORDER BY DT.DATE_PKEY ASC, P.PRODUCTID ASC;

-- Check Work
SELECT * FROM FACT_PRODUCTSALESTARGET;



-- Create Fact_SRCSalesTarget (8,030 rows)
CREATE OR REPLACE TABLE FACT_SRCSALESTARGET (
    DIMSTOREID INT CONSTRAINT FK_DIMSTOREID FOREIGN KEY REFERENCES DIM_STORE(DIMSTOREID) -- FK
    ,DIMRESELLERID INT CONSTRAINT FK_DIMRESELLERID FOREIGN KEY REFERENCES DIM_RESELLER(DIMRESELLERID) -- FK
    ,DIMCHANNELID INT CONSTRAINT FK_DIMCHANNELID FOREIGN KEY REFERENCES DIM_CHANNEL(DIMCHANNELID) --FK
    ,DIMTARGETDATEID NUMBER(9) CONSTRAINT FK_DIMSALEDATEID FOREIGN KEY REFERENCES DIM_DATE(DATE_PKEY) --FK
    ,SALESTARGETAMOUNT FLOAT
);

INSERT INTO FACT_SRCSALESTARGET (
    DIMSTOREID
    ,DIMRESELLERID 
    ,DIMCHANNELID
    ,DIMTARGETDATEID
    ,SALESTARGETAMOUNT
)
SELECT
    CASE WHEN ST.DIMSTOREID IS NULL THEN -1 ELSE ST.DIMSTOREID END AS DIMSTOREID 
    ,CASE WHEN RE.DIMRESELLERID IS NULL THEN -1 ELSE RE.DIMRESELLERID END AS DIMRESELLERID 
    ,CASE WHEN CH.DIMCHANNELID IS NULL THEN -1 ELSE CH.DIMCHANNELID END AS DIMCHANNELID 
    ,DT.DATE_PKEY
    ,(TDC.TARGETSALESAMOUNT / 365)
FROM STAGE_TARGET_DATA_CHANNEL TDC 
    LEFT JOIN DIM_CHANNEL CH ON CH.CHANNELNAME = TDC.CHANNELNAME
    LEFT JOIN DIM_STORE ST ON ST.STORENAME = TDC.TARGETNAME
    LEFT JOIN DIM_RESELLER RE ON RE.RESELLERNAME = TDC.TARGETNAME
    INNER JOIN DIM_DATE DT ON DT.YEAR = TDC.YEAR
ORDER BY DT.DATE_PKEY ASC, CH.DIMCHANNELID ASC, ST.DIMSTOREID ASC, RE.DIMRESELLERID ASC;

SELECT * FROM FACT_SRCSALESTARGET;


-- Create Fact_ActualSales (187,320)
CREATE OR REPLACE TABLE FACT_SALESACTUAL (
    DIMPRODUCTID INT CONSTRAINT FK_DIMPRODUCTID FOREIGN KEY REFERENCES DIM_PRODUCT(DIMPRODUCTID) -- FK
    ,DIMSTOREID INT CONSTRAINT FK_DIMSTOREID FOREIGN KEY REFERENCES DIM_STORE(DIMSTOREID) -- FK
    ,DIMRESELLERID INT CONSTRAINT FK_DIMRESELLERID FOREIGN KEY REFERENCES DIM_RESELLER(DIMRESELLERID) -- FK
    ,DIMCUSTOMERID INT CONSTRAINT FK_DIMCUSTOMERID FOREIGN KEY REFERENCES DIM_CUSTOMER(DIMCUSTOMERID) -- FK
    ,DIMCHANNELID INT CONSTRAINT FK_DIMCHANNELID FOREIGN KEY REFERENCES DIM_CHANNEL(DIMCHANNELID) -- FK
    ,DIMSALEDATEID NUMBER(9) CONSTRAINT FK_DIMSALEDATEID FOREIGN KEY REFERENCES DIM_DATE(DATE_PKEY) -- FK
    ,DIMLOCATIONID INT CONSTRAINT FK_DIMLOCATIONID FOREIGN KEY REFERENCES DIM_LOCATION(DIMLOCATIONID) -- FK
    ,SOURCESALESHEADERID INT 
    ,SOURCESALESDETAILID INT 
    ,SALEAMOUNT FLOAT 
    ,SALEQUANTITY INT 
    ,SALEUNITPRICE FLOAT 
    ,SALEEXTENDEDCOST FLOAT 
    ,SALETOTALPROFIT FLOAT 
);

INSERT INTO FACT_SALESACTUAL (
    DIMPRODUCTID
    ,DIMSTOREID 
    ,DIMRESELLERID 
    ,DIMCUSTOMERID
    ,DIMCHANNELID
    ,DIMSALEDATEID
    ,DIMLOCATIONID
    ,SOURCESALESHEADERID  
    ,SOURCESALESDETAILID  
    ,SALEAMOUNT  
    ,SALEQUANTITY  
    ,SALEUNITPRICE  
    ,SALEEXTENDEDCOST  
    ,SALETOTALPROFIT  
)
SELECT 
    P.DIMPRODUCTID
    ,CASE WHEN S.DIMSTOREID IS NULL THEN -1 ELSE S.DIMSTOREID END AS DIMSTOREID 
    ,CASE WHEN R.DIMRESELLERID IS NULL THEN -1 ELSE R.DIMRESELLERID END AS DIMRESELLERID 
    ,CASE WHEN CU.DIMCUSTOMERID IS NULL THEN -1 ELSE CU.DIMCUSTOMERID END AS DIMCUSTOMERID 
    ,CH.DIMCHANNELID
    ,DT.DATE_PKEY AS DIMSALEDATEID
    ,L.DIMLOCATIONID
    ,SH.SALESHEADERID AS SOURCESALESHEADERID
    ,SD.SALESDETAILID AS SOURCESALESDETAILID
    ,SD.SALESAMOUNT AS SALEAMOUNT
    ,SD.SALESQUANTITY AS SALEQUANTITY
    ,P.PRODUCTRETAILPRICE AS SALEUNITPRICE
    ,(P.PRODUCTCOST * SD.SALESQUANTITY) AS SALEEXTENDEDCOST
    ,(P.PRODUCTRETAILPROFIT * SD.SALESQUANTITY) AS SALETOTALPROFIT
FROM STAGE_SALES_DETAIL SD 
    LEFT JOIN STAGE_SALES_HEADER SH ON SH.SALESHEADERID = SD.SALESHEADERID
    LEFT JOIN DIM_PRODUCT P ON P.DIMPRODUCTID = SD.PRODUCTID
    LEFT JOIN DIM_STORE S ON S.DIMSTOREID = SH.STOREID
    LEFT JOIN DIM_RESELLER R ON R.RESELLERID = SH.RESELLERID
    LEFT JOIN DIM_CUSTOMER CU ON CU.CUSTOMERID = SH.CUSTOMERID
    LEFT JOIN DIM_CHANNEL CH ON CH.DIMCHANNELID = SH.CHANNELID
    LEFT JOIN DIM_LOCATION L ON L.DIMLOCATIONID = S.DIMLOCATIONID
        OR (L.DIMLOCATIONID = R.DIMLOCATIONID) 
        OR (L.DIMLOCATIONID = CU.DIMLOCATIONID) 
    INNER JOIN DIM_DATE DT ON DT.DATE = DATEADD(YEAR, 2000, CAST(SH.DATE AS DATE))
ORDER BY SH.SALESHEADERID ASC;


SELECT * FROM FACT_SALESACTUAL;
